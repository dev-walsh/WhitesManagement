AWSTemplateFormatVersion: '2010-09-09'
Description: 'Whites Management Admin Panel on whitesaggs.com/admin'

Parameters:
  KeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: EC2 Key Pair for SSH access
    ConstraintDescription: Must be the name of an existing EC2 KeyPair
    
  InstanceType:
    Type: String
    Default: t3.small
    AllowedValues:
      - t2.micro
      - t3.small
      - t3.medium
      - t3.large
    Description: EC2 instance type (t2.micro for free tier, t3.small recommended)
    
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: VPC ID where the instance will be launched
    
  SubnetId:
    Type: AWS::EC2::Subnet::Id
    Description: Subnet ID where the instance will be launched
    
  AllowedSSHCIDR:
    Type: String
    Default: 0.0.0.0/0
    Description: CIDR block allowed for SSH access (restrict to your IP for security)
    
  DomainName:
    Type: String
    Default: whitesaggs.com
    Description: Domain name for the application

Resources:
  WhitesManagementInstance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-0c02fb55956c7d316  # Ubuntu 22.04 LTS (update as needed)
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyName
      SubnetId: !Ref SubnetId
      SecurityGroupIds:
        - !Ref WhitesManagementSecurityGroup
      IamInstanceProfile: !Ref WhitesManagementInstanceProfile
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          # Update system
          apt-get update
          apt-get upgrade -y
          
          # Install dependencies
          apt-get install -y curl
          
          # Download and run deployment script
          curl -sSL https://raw.githubusercontent.com/your-repo/whites-management/main/aws_whitesaggs_deployment.sh | bash
          
          # Signal CloudFormation
          /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource WhitesManagementInstance --region ${AWS::Region}
      Tags:
        - Key: Name
          Value: Whites Management Admin Panel
        - Key: Environment
          Value: Production
        - Key: Application
          Value: WhitesManagement
    CreationPolicy:
      ResourceSignal:
        Timeout: PT15M

  WhitesManagementSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for Whites Management Admin Panel
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref AllowedSSHCIDR
          Description: SSH access
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
          Description: HTTP access
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
          Description: HTTPS access
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0
          Description: All outbound traffic
      Tags:
        - Key: Name
          Value: Whites Management Security Group

  WhitesManagementRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy
      Policies:
        - PolicyName: S3BackupPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:DeleteObject
                Resource: !Sub 'arn:aws:s3:::${BackupBucket}/*'
              - Effect: Allow
                Action:
                  - s3:ListBucket
                Resource: !Sub 'arn:aws:s3:::${BackupBucket}'

  WhitesManagementInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref WhitesManagementRole

  BackupBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub 'whites-management-backups-${AWS::StackName}-${AWS::AccountId}'
      VersioningConfiguration:
        Status: Enabled
      LifecycleConfiguration:
        Rules:
          - Id: DeleteOldBackups
            Status: Enabled
            ExpirationInDays: 90
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

  ElasticIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      InstanceId: !Ref WhitesManagementInstance
      Tags:
        - Key: Name
          Value: Whites Management EIP

Outputs:
  InstanceId:
    Description: EC2 Instance ID
    Value: !Ref WhitesManagementInstance
    Export:
      Name: !Sub '${AWS::StackName}-InstanceId'

  PublicIP:
    Description: Public IP address
    Value: !Ref ElasticIP
    Export:
      Name: !Sub '${AWS::StackName}-PublicIP'

  SecurityGroupId:
    Description: Security Group ID
    Value: !Ref WhitesManagementSecurityGroup
    Export:
      Name: !Sub '${AWS::StackName}-SecurityGroupId'

  BackupBucketName:
    Description: S3 Backup Bucket Name
    Value: !Ref BackupBucket
    Export:
      Name: !Sub '${AWS::StackName}-BackupBucket'

  ApplicationURL:
    Description: Application URL
    Value: !Sub 'https://${DomainName}/admin'
    Export:
      Name: !Sub '${AWS::StackName}-ApplicationURL'

  SSHCommand:
    Description: SSH command to connect to the instance
    Value: !Sub 'ssh -i ${KeyName}.pem ubuntu@${ElasticIP}'
